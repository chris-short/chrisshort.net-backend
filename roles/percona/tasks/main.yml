---
- name: Set swappiness in /etc/sysctl.conf
  template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode=0644
  with_items:
    - { src: 'sysctl.conf.j2', dest: '/etc/sysctl.conf' }
  tags:
    - swappiness
    - sysctl
  notify:
    - sysctl

- name: Set disk scheduler to deadline per Percona recommendation
  template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode={{ item.mode }}
  with_items:
    - { src: 'rc.local.j2', dest: '/etc/rc.d/rc.local', mode: '0744' }
  tags:
    - scheduler
  notify:
    - scheduler

- name: Stop mysqld/mysql service (mysqld is temporary until Percona rollout is complete)
  service: name={{ item }} state=stopped
  ignore_errors: yes
  with_items:
    - mysql
    - mysqld

- name: Remove old mysql and mysql-server packages
  yum: name={{ item }} state=absent
  with_items:
    - mysql
    - mysql-server

- name: Add Percona Repo
  yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm state=present

- name: Install latest Percona 5.6 Non-Server software
  yum: name={{ item }} state=latest
  with_items:
    - MySQL-python
    - Percona-Server-client-56
    - Percona-Server-shared-56
    - percona-toolkit
    - sysstat
    - xtrabackup
  tags:
    - percona56
    - percona56-tools

- name: Install latest Percona 5.6 Server software
  yum: name={{ item }} state=latest
  with_items:
    - Percona-Server-server-56
  tags:
    - percona56
  notify:
    - mysql upgrade

- name: Place Percona MySQL logrotate file on server
  template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode={{ item.mode }}
  with_items:
    - { src: 'percona_logrotate.j2', dest: '/etc/logrotate.d/mysql', mode: '0644' }
  tags:
    - logrotate

- name: Place Percona MySQL Configuration on System
  template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode=0644
  with_items:
    - { src: 'system_my.cnf.j2', dest: '/etc/my.cnf' }
  tags:
    - config

#- name: /var/log/mysql Needs to Exist
#  file: path=/var/log/mysql owner=mysql group=mysql mode=0755 state=directory

- name: Place /root/.my.cnf on System
  template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode=0600
  with_items:
    - { src: 'root_my.cnf.j2', dest: '/root/.my.cnf' }
  tags:
    - root_my.cnf

- name: Start mysql service
  service: name=mysql state=started

- meta: flush_handlers

- name: delete anonymous MySQL server user for {{ ansible_hostname }}
  action: mysql_user user="" host="{{ ansible_hostname }}" state="absent"

- name: delete anonymous MySQL server user for localhost
  action: mysql_user user="" state="absent"

- name: remove the MySQL test database
  action: mysql_db db=test state=absent

- name: Change root user password on first run (this is the last task because it should fail after first run which is okay)
  mysql_user: login_user=root
              login_password=''
              name=root
              password={{ mysql_root_password }}
              priv=*.*:ALL,GRANT
              host={{ item }}
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

