---
- name: Disable SELinux
  selinux: state=disabled

- name: Deploy mainline nginx repo configuration
  template: src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo
  notify: restart nginx

- name: Install Nginx and openssl
  yum: name={{ item }} state=latest
  with_items:
    - nginx
    - openssl
  notify: restart nginx

- name: Deploy dhparam.pem
  shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  args:
    chdir: /etc/ssl/certs
    creates: /etc/ssl/certs/dhparam.pem
  notify: restart nginx

- name: Deploy Certs
  copy: content={{ item.content }} dest=/etc/pki/tls/certs/{{ item.dest }} owner=root group=root mode=0640
  with_items:
    - { content: "{{ nginx_cf_pem }}", dest: 'chrisshort.net.pem' }
    - { content: "{{ nginx_cf_key }}", dest: 'chrisshort.net.key' }
  notify: restart nginx
  no_log: True
  tags:
    - certs
    
- name: Create /etc/nginx/ directories
  file: path=/etc/nginx/{{ item }} state=directory
  with_items:
    - conf.d
    - includes

- name: Deploy nginx.conf
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: restart nginx
  tags:
    - nginx_configs

- name: Use firewalld to open ports 80/443
  shell: firewall-cmd --permanent --add-service {{ item }}
  with_items:
    - http
    - https
  changed_when: False

#- name: Enable and start nginx
#  service: name=nginx state=restarted enabled=yes

- name: Get CloudFlare CA
  get_url:
    url=https://support.cloudflare.com/hc/en-us/article_attachments/201243967/origin-pull-ca.pem
    dest=/etc/ssl/certs/origin-pull-ca.pem

# https://api.cloudflare.com
# https://www.evernote.com/shard/s5/nl/152646967/fb4f795c-05ef-4d87-9822-38499a5dd9bc/
- name: Update chrisshort.net A record at CloudFlare
  shell: curl -X PUT "https://api.cloudflare.com/client/v4/zones/{{ cf_zone_id }}/dns_records/0227d6cdd257f639a2ab488c03aea713" \
     -H "Content-Type:application/json" \
     -H "X-Auth-Key:{{ cf_api_key }}" \
     -H "X-Auth-Email:chris@chrisshort.net" \
     --data '{"type":"A","name":"chrisshort.net","content":"{{ inventory_hostname }}","proxiable":true,"proxied":true,"ttl":1,"locked":false,"zone_id":"{{ cf_zone_id }}","zone_name":"{{ cf_zone_name }}","meta":{"auto_added":false}}'
  tags:
    - a_record

- name: Update ssh.chrisshort.net A record at CloudFlare
  shell: curl -X PUT "https://api.cloudflare.com/client/v4/zones/{{ cf_zone_id }}/dns_records/7931ea7903eaa365924f9c6d76001aaf" \
     -H "Content-Type:application/json" \
     -H "X-Auth-Key:{{ cf_api_key }}" \
     -H "X-Auth-Email:chris@chrisshort.net" \
     --data '{"type":"A","name":"ssh.chrisshort.net","content":"{{ inventory_hostname }}","proxiable":true,"proxied":false,"ttl":300,"locked":false,"zone_id":"{{ cf_zone_id }}","zone_name":"{{ cf_zone_name }}","meta":{"auto_added":false}}'
  tags:
    - a_record

- name: Deploy chrisshort.net Nginx Configs
  template: src={{ item.src }} dest=/etc/nginx/{{ item.dest }}
  with_items:
    - { src: 'chrisshort.net.conf.j2', dest: 'conf.d/chrisshort.net.conf' }
    - { src: 'well-known-post-le.conf.j2', dest: 'conf.d/well-known.conf' }
    - { src: 'drawings.chrisshort.net.conf.j2', dest: 'conf.d/drawings.chrisshort.net.conf' }
  notify: restart nginx
  tags:
    - nginx_configs
    - chrisshort.net
