---
- name: Disable SELinux
  selinux: state=disabled

- name: New Relic Deployment
  newrelic_deployment:
    token={{ nr_api_key }}
    app_name=ghost
    user='ansible nginx deployment'
  tags:
    - nginx_configs

- name: Deploy mainline nginx repo configuration
  template: src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo

- name: "Install Nginx and Let's Encrypt Dependencies"
  yum: name={{ item }} state=latest
  with_items:
    - bc
    - git
    - nginx
    - openssl

- name: Deploy dhparam.pem
  shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  args:
    chdir: /etc/ssl/certs
    creates: /etc/ssl/certs/dhparam.pem
    
- name: Delete /etc/nginx/conf.d
  file: path=/etc/nginx/conf.d/{{ item }} state=absent
  with_items:
    - chrisshort.net.conf
    - well-known.conf

- name: Create .well-known directory
  file: path=/var/www/.well-known state=directory owner=root group=root recurse=yes

- name: Create /etc/nginx/ directories
  file: path=/etc/nginx/{{ item }} state=directory
  with_items:
    - conf.d
    - includes

- name: Deploy well-known.conf
  template: src=well-known.conf.j2 dest=/etc/nginx/conf.d/well-known.conf
  notify: restart nginx
  tags:
    - nginx_configs
    - well_known

- name: Deploy nginx.conf
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: restart nginx
  tags:
    - nginx_configs

- name: Use firewalld to open ports 80/443
  shell: firewall-cmd --permanent --add-service {{ item }}
  with_items:
    - http
    - https
  changed_when: False

- name: Enable and start nginx
  service: name=nginx state=restarted enabled=yes

- name: Get CloudFlare CA
  get_url: url=https://support.cloudflare.com/hc/en-us/article_attachments/201243967/origin-pull-ca.pem dest=/etc/ssl/certs/origin-pull-ca.pem

# https://www.cloudflare.com/docs/client-api.html (rec_load_all to find all records, rec_edit to change them)
- name: Update chrisshort.net A record at CloudFlare
  cloudflare_dns:
    zone: "{{ cf_zone }}"
    record: "{{ item }}"
    type: A
    value: "{{ inventory_hostname }}"
    account_email: "{{ cf_email }}"
    account_api_token: "{{ cf_api_key }}"
  with_items: "{{ cf_records }}"
  tags: cloudflare
#  shell: curl -sS https://www.cloudflare.com/api_json.html -d 'a=rec_edit' -d 'tkn={{ cf_api_key }}' -d 'email={{ cf_email }}' -d 'z={{ cf_zone }}' -d 'type=A' -d 'name=chrisshort.net' -d 'id=451249159' -d 'content={{ inventory_hostname }}' -d 'service_mode=0' -d 'ttl=1'

- name: "Clone Let's Encrypt git repo"
  git:
    repo=https://github.com/letsencrypt/letsencrypt
    dest=/opt/letsencrypt
    version=master
    force=yes

- name: Deploy le-renew-webroot.ini
  template: src=le-renew-webroot.ini.j2 dest=/usr/local/etc/le-renew-webroot.ini

- name: Deploy le-renewal.log logrotate
  template: src=le-renewal-logrotate.j2 dest=/etc/logrotate.d/le-renewal

- name: Get le-renew-webroot script
  get_url:
    url=https://gist.githubusercontent.com/thisismitch/e1b603165523df66d5cc/raw/fbffbf358e96110d5566f13677d9bd5f4f65794c/le-renew-webroot
    dest=/usr/local/sbin/le-renew-webroot
    
- name: Make le-renew-webroot executable
  file: path=/usr/local/sbin/le-renew-webroot mode=0700

- pause: prompt="5 Second Pause to Wait for DNS Changes" seconds=5

- name: "Run Let's Encrypt"
  shell: /usr/local/sbin/le-renew-webroot >> /var/log/le-renewal.log
  args:
    chdir: /usr/local/sbin
    creates: /etc/letsencrypt/live/chrisshort.net/fullchain.pem

- name: Deploy chrisshort.net Nginx Configs
  template: src={{ item.src }} dest=/etc/nginx/{{ item.dest }}
  with_items:
    - { src: 'chrisshort.net.conf.j2', dest: 'conf.d/chrisshort.net.conf' }
    - { src: 'well-known-post-le.conf.j2', dest: 'conf.d/well-known.conf' }
  notify: restart nginx
  tags:
    - nginx_configs
    - chrisshort.net

- name: "Setup Let's Encrypt cronjob"
  cron: 
    name="Let's Encrypt Renewal"
    job="date >> /var/log/le-renewal.log && /usr/local/sbin/le-renew-webroot >> /var/log/le-renewal.log"
    weekday=0
    hour=5
    minute=15
    state=present
